spring.application.name=KafkaMicroservcieForEvalauation

# Repository Evaluator Microservice Configuration
# Last Updated: 2025-08-07 15:32:10 by hardik118
logging.level.com.yourpackage=DEBUG

spring.datasource.url=jdbc:postgresql://ep-wandering-dew-a192zvc5-pooler.ap-southeast-1.aws.neon.tech/neondb?sslmode=require&channel_binding=require
spring.datasource.username=neondb_owner
spring.datasource.password=



spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true


# Optional: connection pool tuning
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=2

# Kafka Connection Settings
spring.kafka.bootstrap-servers=localhost:29092


# Optional: avoid type headers if consumer uses default.type
spring.kafka.producer.properties.spring.json.add.type.headers=false
# Consumer Configuration
spring.kafka.consumer.group-id=repo-evaluator-worker
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.example.demo.model
# Add these two lines to control poll interval and batch size
spring.kafka.consumer.properties.max.poll.interval.ms=600000
spring.kafka.consumer.properties.max.poll.records=10


# Producer Configuration
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.properties.spring.deserializer.key.delegate.class=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.value.default.type=com.example.AiRepoScrening.Model.EvaluationResult
spring.kafka.consumer.properties.spring.json.use.type.headers=false
# Topic Names
app.kafka.topics.evaluation-requests=evaluation-requests
app.kafka.topics.evaluation-results=evaluation-results

# Repository Evaluation Configuration
repo.evaluator.clone.directory=/repo-evaluator

evaluation.timeout.seconds=600

# Groq API Configuration

# Lower the number of parallel LLM evaluations
evaluation.concurrency=2

